{
  "hash": "ab51c99779c1b2fb237af110613a6457",
  "result": {
    "markdown": "---\ntitle: \"Experimentando o R 4.1.0\"\nsubtitle: \"Primeiras impressões ao usar o nova versão do R\"\nauthor: \"Beatriz Milz\"\ncategories:\n  - RStudio\n  - R\n  - Pipe\ndate: 2021-05-18\ntoc: true\nimage: featured-photo.svg\n---\n\n\n\n\n## Introdução\n\nA versão do 4.1.0 do R foi lançada **hoje** (dia 18 de maio de 2021), e a comunidade está bem animada com a chegada do pipe `|>` no R base!\n\nEsse post **não** tem como objetivo explicar quais foram as mudanças, e sim para apenas mostrar as primeiras impressões ao usar **a versão 4.1.0**!\nCaso você queira saber mais sobre as mudanças, recomendo esses textos:\n\n-   [Post \"R 4.1: o novo pipe está chegando!\", por Caio Lente, da Curso-R](https://blog.curso-r.com/posts/2021-05-06-o-novo-pipe-esta-chegando/)\n\n-   [Post \"New features in R 4.1.0\", blog da jumping rivers](https://www.jumpingrivers.com/blog/new-features-r410-pipe-anonymous-functions/)\n\n-   *edit*: [Video por Samuel Macêdo: Qual a diferença entre o pipe do magrittr e o do R base?](https://www.youtube.com/watch?v=6SZc4v0FDTw)\n\nAlém disso, amanhã acontecerá uma live no canal do Youtube da Curso-R (e eu pretendo participar):\n\n<center>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/RPSLFU_5OGk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n</iframe>\n\n</center>\n\n## Atalho do pipe no RStudio\n\nAlém de atualizar a versão do R para 4.1.0 ([veja mais aqui](https://www.r-project.org/)), eu também atualizei a versão do RStudio para a preview ([veja mais aqui](https://www.rstudio.com/products/rstudio/download/preview/)).\n\nA versão preview apresenta a opção de atalho para o novo pipe, seguindo os passos: Tools \\> Global Options \\> Code \\> Use native pipe operator.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://beatrizmilz.com/img/atalho_rstudio_novo_pipe.png)\n:::\n:::\n\n\nAtivando essa opção, é possível usar o mesmo atalho de costume para escrever o pipe do R base: `Ctrl` + `Shift` + `M`!\n\n## Exemplos!\n\nPara experimentar, resolvi tentar adaptar os exemplos apresentados no [capítulo sobre o operador pipe](https://livro.curso-r.com/6-1-o-operador-pipe.html), do livro [Ciência de Dados em R](https://livro.curso-r.com/index.html), da qual sou contribuidora!\n\n<a href='https://livro.curso-r.com/index.html'>\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://curso-r.com/images/produtos/hex-livro.png){fig-align='center' width=30%}\n:::\n:::\n\n\n</a>\n\nComo vou apresentar o código original mostrado no livro (usando o pipe do `{magrittr}`) e a adaptação com pipe do R base, é necessário carregar o pipe do pacote `{magrittr}` para que os exemplos a seguir funcionem:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Esse argumento include.only é útil nesse caso,\n# pois apenas a função %>% é carregada\nlibrary(magrittr, include.only = \"%>%\")\n```\n:::\n\n\nO primeiro exemplo do livro mostra algumas equivalências, e adiciono então uma terceira linha, mostrando a equivalência com o pipe do R base: substituimos o `%>%` do `{magrittr}`, pelo `|>` do R base!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf(x, y) # sem o pipe\nx %>% f(y) # com o pipe do magrittr\nx |> f(y) # com o pipe do R base\n```\n:::\n\n\n## Exemplo 1\n\nNo primeiro exemplo, apenas foi necessário substituir o pipe do magrittr `%>%` pelo pipe do R base `|>`:\n\nExemplo do livro:\n\n> Vamos calcular a raiz quadrada da soma dos valores de 1 a 4.\n> Primeiro, sem o pipe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1, 2, 3, 4)\n```\n:::\n\n\nClique abaixo nos diferentes \"Panels\" para verificar a diferença no código!\n\n::: panel-tabset\n## Sem pipe\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Versão original do livro, sem usar o pipe\nsqrt(sum(x))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.162278\n```\n:::\n:::\n\n\n## Pipe magrittr\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Versão original do livro, com o pipe do magrittr\nx %>% sum() %>% sqrt()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.162278\n```\n:::\n:::\n\n\n## Versão adaptada com pipe do R base\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Versão usando o pipe do R base\nx |> sum() |> sqrt()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.162278\n```\n:::\n:::\n\n:::\n\nFoi tranquilo!\n\n## Exemplo 2\n\nNeste próximo exemplo, não basta fazer a substituição feita no exemplo anterior.\nIsso acontece porque o pipe do magrittr aceita utilizar o ponto `.` (chamado de *dot placeholder* em inglês) para indicar onde o resultado recebido pelo pipe será substituído na próxima operação.\nPor outro lado, o pipe do R base não aceita essa forma.\n\nComo o exemplo do livro utiliza o ponto `.`, isso teve que ser adaptado para que o código funcionasse!\nEssa adaptação ocorreu utilizando outra grande novidade do R 4.1.0: **as funções anônimas**: `\\(x)`.\nMeu objetivo não é explicar aqui, mas recomendo fortemente que leia [texto do Caio Lente](https://blog.curso-r.com/posts/2021-05-06-o-novo-pipe-esta-chegando/), pois lá tem uma seção inteira sobre esse tema.\nSinceramente não foi de primeira que eu acertei o uso da função anônima no exemplo abaixo, mas depois de olhar alguns outros exemplos, deu certo!\n\nExemplo do livro:\n\n> Queremos que o dataset seja recebido pelo segundo argumento (data=) da função \"lm\".\n\nClique abaixo nos diferentes \"Panels\" para verificar a diferença no código!\n\n::: panel-tabset\n## Pipe magrittr\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Versão original do livro usando o pipe do magrittr\nairquality %>%\n  na.omit() %>%\n  lm(Ozone ~ Wind + Temp + Solar.R, data = .) %>%\n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Ozone ~ Wind + Temp + Solar.R, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.485 -14.219  -3.551  10.097  95.619 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -64.34208   23.05472  -2.791  0.00623 ** \nWind         -3.33359    0.65441  -5.094 1.52e-06 ***\nTemp          1.65209    0.25353   6.516 2.42e-09 ***\nSolar.R       0.05982    0.02319   2.580  0.01124 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 21.18 on 107 degrees of freedom\nMultiple R-squared:  0.6059,\tAdjusted R-squared:  0.5948 \nF-statistic: 54.83 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n## R base 4.1\n\nVersão adaptada com pipe do R base 4.1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Versão usando o pipe do R base + funções anônimas\nairquality |>\n  na.omit()  |>\n  {\\(x) lm(formula = Ozone ~ Wind + Temp + Solar.R, data = x)}() |>\n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Ozone ~ Wind + Temp + Solar.R, data = x)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.485 -14.219  -3.551  10.097  95.619 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -64.34208   23.05472  -2.791  0.00623 ** \nWind         -3.33359    0.65441  -5.094 1.52e-06 ***\nTemp          1.65209    0.25353   6.516 2.42e-09 ***\nSolar.R       0.05982    0.02319   2.580  0.01124 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 21.18 on 107 degrees of freedom\nMultiple R-squared:  0.6059,\tAdjusted R-squared:  0.5948 \nF-statistic: 54.83 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n## EDIT: R base 4.2\n\nVersão adaptada com pipe do R base 4.2: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Versão usando o pipe do R base + funções anônimas\nairquality |>\n  na.omit() |>\n  lm(Ozone ~ Wind + Temp + Solar.R, data = _) |>\n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Ozone ~ Wind + Temp + Solar.R, data = na.omit(airquality))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.485 -14.219  -3.551  10.097  95.619 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -64.34208   23.05472  -2.791  0.00623 ** \nWind         -3.33359    0.65441  -5.094 1.52e-06 ***\nTemp          1.65209    0.25353   6.516 2.42e-09 ***\nSolar.R       0.05982    0.02319   2.580  0.01124 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 21.18 on 107 degrees of freedom\nMultiple R-squared:  0.6059,\tAdjusted R-squared:  0.5948 \nF-statistic: 54.83 on 3 and 107 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n:::\n\n## Conclusão\n\nÉ muito legal ver que a linguagem está desenvolvendo e incorporando contribuições que surgiram das demandas da comunidade!\nMuito empolgante testar coisas novas.\nCaso você também esteja animada(o), [assista a live da Curso-R sobre o tema](https://www.youtube.com/embed/RPSLFU_5OGk)!\n\nLembrando que os códigos acima utilizando o pipe do R base e as notações das funções anônimas apenas funcionarão se você instalou a nova versão do R: 4.1.0!\n\nEssas são as informações relacionadas à plataforma que estou usando, e a versão do R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessioninfo::session_info()$platform\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n setting  value\n version  R version 4.2.0 (2022-04-22)\n os       macOS Big Sur 11.6.6\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Sao_Paulo\n date     2022-06-16\n pandoc   2.17.1.1 @ /Applications/RStudio.app/Contents/MacOS/quarto/bin/ (via rmarkdown)\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}