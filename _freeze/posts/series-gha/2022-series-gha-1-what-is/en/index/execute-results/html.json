{
  "hash": "8e59f6bee51f0862ae21a14fe7c15218",
  "result": {
    "markdown": "---\ntitle: \"Introduction to GitHub Actions to R users\"\nsubtitle: \"GitHub Actions Series 1 - In this post, I will briefly introduce GitHub Actions and show how you can start using GitHub Actions with R.\"\nauthor: \"Beatriz Milz\"\ndate: \"2022-06-30\"\ncategories: [\"Git\", \"GitHub\", \"GitHub Actions\", \"Automations\"]\nimage: \"featured.png\"\ntoc: true\ndraft: false\n---\n\n<a href=\"../en/index.qmd\"> <button type=\"button\" class=\"btn btn-primary\">English</button></a>\n<a href=\"../es/index.qmd\"> <button type=\"button\" class=\"btn btn-primary\">Espa√±ol</button></a>\n<a href=\"../pt/index.qmd\"> <button type=\"button\" class=\"btn btn-primary\">Portugu√™s</button></a>\n\n\nHi!\nThis is the first blog post in the \"GitHub Action\" Series.\nThis series of posts are complementary material for my [RStudio Conference - rstudio::conf 2022](https://www.rstudio.com/conference/) lightning talk.\n\n[![](images/talk.png){fig-align=\"center\" width=\"70%\"}](https://rstudioconf2022.sched.com/event/11ia9?iframe=no)\n\nIn this post, **I will briefly introduce GitHub Actions and show how you can start using GitHub Actions with R**.\n\n## What is GitHub Actions?\n\n[GitHub Actions](https://github.com/features/actions) is a feature by [GitHub](https://github.com/) that enables us to automate tasks with code.\nFor example, we can specify a series of commands to run when activated!\n\nWe can do a lot of different automations with GitHub Actions, such as:\n\n-   Downloading and saving a file everyday (such as `.csv` / `.xlsx` / `.json` ..);\n\n-   Running an R script and saving the results into a database, or a Google Sheet, for example;\n\n-   Running web scraping routines;\n\n-   Rendering an RMarkdown or Quarto document;\n\n-   And so on!\n    üöÄ\n\n## How to use GHA in an R package?\n\nGitHub Actions is heavily used in package development for CI/CD.\nFor example, package developers use GitHub Actions to perform tests in their code, run checking routines, update the documentation and the package's website, among other things.\n\n::: callout-tip\n## What is CI/CD in the context of R packages?\n\nContinuous integration (CI) is a development practice requiring developers to regularly integrate code into a shared repository, after which automated checks and tests are run to verify the integrity of the new code.\n\nContinuous delivery (CD) is a software development methodology in which code changes are automatically checked, tested, and released to production.\n**This allows for new package versions to be released frequently.**\n:::\n\nThe package [usethis](https://usethis.r-lib.org/reference/github_actions.html) helps us set up GitHub Actions in R packages.\nIt is essential to know that, by default, the Actions created using usethis come from the [r-lib/actions repository](https://github.com/r-lib/actions/tree/v2-branch/examples#readme).\nSave this link; it is pure gold.\n\n::: callout-note\n## üèÜ\n\nI would like to thank all the work made by the [contributors of the r-lib/actions repository](https://github.com/r-lib/actions/graphs/contributors).\nüèÜ This repository was the most significant source of code and content about GitHub Actions for R to me.\n\n[![](images/actions-repo.png){fig-align=\"center\" width=\"100%\"}](https://github.com/r-lib/actions/blob/v2-branch/examples/README.md)\n:::\n\nHere are some examples of how to set up GH Actions in packages:\n\n-   To perform checks (like `devtools::check()` ) in a package every time there is a change in the code, use:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::use_github_action(\"check-release\")\n```\n:::\n\n\nThis is useful because every time there is a check error, we get an email from GitHub ‚ö†Ô∏è.\nSo we know that something is breaking the code and can fix it as soon as possible.\n\n-   To build the package page (like `pkgdown::build_site()` ) every time there is a change in the code, use:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::use_github_action(\"pkgdown\")\n```\n:::\n\n\nThis allows the package website and documentation to be always up to date.\nüìå\n\n## How to use GHA in an R script?\n\nWe already know that we can make awesome automation with R packages using GitHub Actions.\nBut most R users that I know use R Scripts and RMarkdown files in their daily use.\nI did not find examples of using GHA with simple scripts (without the package structure) in the [r-lib/actions repository](https://github.com/r-lib/actions/blob/v2-branch/examples/README.md).\nSo, to do that, we need to get used to how GHA works!\n\nThe [GitHub documentation about workflows](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions) is an excellent source to learn more about this topic.\n\nFirst, the automated process made with GHA is called **Workflow**.\nThe workflow has two main parts: **Events** and **Jobs**.\n\n-   **Events** describe what can start a workflow.\n    For example, an event can be \"start this workflow every day at 9am\", or \"every time someone makes a push into the repository\" (in other words, there is some change in the code).\n\n-   **Jobs** describes what the computer should do.\n    Imagine that it starts with no software installed at all!\n    So we need to tell which Operational System (OS) we want our code to run (for example, Ubuntu / Windows/ Mac OS).\n    Also, we need to install R and any packages we need to have to run the code.\n    After that, we can add the script we want to run in R and then save any generated results.\n\n## Example\n\nHere is an example of a simple Workflow file.\nThe workflow starts when pressing a button on GitHub (the event), and it installs R and then prints the message \"Hello R World!\" on the console.\n\n``` yml\n# Event - What starts this workflow?\non:\n  workflow_dispatch:\n\n# Name of the workflow\nname: hello-r-world\n\n# Jobs - What the computer should do? \njobs:\n  write-message:\n    # Use Ubuntu   \n    runs-on: ubuntu-latest \n    steps:\n       # Install R\n      - uses: r-lib/actions/setup-r@v3    \n      - name: print-message   \n        # Code to execute R script\n        run: Rscript -e 'print(\"Hello R World!\")' \n```\n\n## See you in the next post!\n\nThis is the general idea of GitHub Actions.\nIn the next post, I'll write how you can create a GHA that runs an R script and saves the result into the GitHub repository.\nStay tuned!\n\n## Acknowledgments\n\n-   [Daniel Falbel](https://github.com/dfalbel), [Athos Damiani](https://github.com/Athospd), and [Julio Trecenti](https://github.com/jtrecenti): the people that first introduced me to GitHub Actions, aswered questions, and send a bunch of awesome links.\n    Thanks!\n\n-   The [contributors of the r-lib/actions repository](https://github.com/r-lib/actions/graphs/contributors):üèÜ This repository was the most significant source of code and content about GitHub Actions for R to me.\n\n-   [Julio Trecenti](https://github.com/jtrecenti): thanks for reviewing the post!\n\n## References\n\n-   [GitHub Actions](https://github.com/features/actions)\n\n-   [Package usethis](https://usethis.r-lib.org/reference/github_actions.html)\n\n-   [r-lib/actions Repository](https://github.com/r-lib/actions/tree/v2-branch/examples#readme)\n\n-   [GitHub documentation about workflows](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions)\n\n## Share and support!\n\nIf you like these kind of content, consider supporting me at [GitHub Sponsors](https://github.com/sponsors/beatrizmilz/), or sharing it on Twitter:\n\n<center>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">I wrote a new blog post about &quot;Introduction to GitHub Actions to R users&quot;!<a href=\"https://t.co/lCBH4vIGa2\">https://t.co/lCBH4vIGa2</a><br><br>This post is complementary material for my lightning talk at the <a href=\"https://twitter.com/rstudio?ref_src=twsrc%5Etfw\">@rstudio</a> conference!<br><br>Feedback is always welcome :)<a href=\"https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw\">#rstats</a> <a href=\"https://twitter.com/hashtag/github?src=hash&amp;ref_src=twsrc%5Etfw\">#github</a> <a href=\"https://twitter.com/hashtag/githubactions?src=hash&amp;ref_src=twsrc%5Etfw\">#githubactions</a> <a href=\"https://twitter.com/hashtag/rstudioconf?src=hash&amp;ref_src=twsrc%5Etfw\">#rstudioconf</a> <a href=\"https://twitter.com/hashtag/rstudioconf2022?src=hash&amp;ref_src=twsrc%5Etfw\">#rstudioconf2022</a></p>&mdash; Beatriz Milz (@BeaMilz) <a href=\"https://twitter.com/BeaMilz/status/1542526491807797248?ref_src=twsrc%5Etfw\">June 30, 2022</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</center>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}